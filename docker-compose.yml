version: "3"
services:
  redis:
    image: redis
    networks: 
      - webnet
  db:
    image: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks: 
      - webnet
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: slack
    ports:
      - "3030:5432"
  web:
    image: benawad/slack-clone-server:latest
    networks:
      - webnet
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      SERVER_URL: http://ec2-13-57-213-163.us-west-1.compute.amazonaws.com
    volumes:
      - ./files:/app/files
    depends_on:
      - db
      - redis
    # command: ["./wait-for-it.sh", "db:5432", "--", "node", "index.js"]
    command: ["node", "index.js"]
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./mysite.template:/etc/nginx/conf.d/mysite.template
      - ./files:/files
      # for https
      - ./nginx-data/conf.d:/etc/nginx/conf.d
      - ./nginx-data/vhost.d:/etc/nginx/vhost.d
      - ./nginx-data/html:/usr/share/nginx/html
      - ./nginx-data/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - webnet
    depends_on:
      - web
  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    networks:
      - webnet
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - ./nginx-data/conf.d:/etc/nginx/conf.d
      - ./nginx-data/vhost.d:/etc/nginx/vhost.d
      - ./nginx-data/html:/usr/share/nginx/html
      - ./nginx-data/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./mysite.template:/etc/docker-gen/templates/nginx.tmpl:ro
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    networks:
      - webnet
    volumes:
      - ./nginx-data/conf.d:/etc/nginx/conf.d
      - ./nginx-data/vhost.d:/etc/nginx/vhost.d
      - ./nginx-data/html:/usr/share/nginx/html
      - ./nginx-data/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
      NGINX_PROXY_CONTAINER: nginx
      VIRTUAL_HOST: ec2-13-57-213-163.us-west-1.compute.amazonaws.com
      LETSENCRYPT_HOST: ec2-13-57-213-163.us-west-1.compute.amazonaws.com
networks:
  webnet: